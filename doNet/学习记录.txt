===================已掌握=======================
RabbitMQ、CsRedisCore
SignalR、AutoMapper
Dapper简易ORM框架之王
DDD领域驱动设计（优先考虑的业务而不是数据，系统复杂后使用MVC是技术纬度优化，DDD业务是纬度优化相当于微服务，实现了高内聚低耦合，是充血模型）。CQRS（Command Query Responsibility Segration）读写分离，CRUD增删改查
项目生成api工具：Swagger
SqlServer集群


===================待学习=======================
●微服务/集群/分布式/
●Kubernetes、Docker容器引擎。docker加上Jenkins部署比较简单，Serverless是一种构建和管理基于微服务架构的完整流程
●服务框架：Consul（服务治理、配置中心）+ Polly（服务熔断）+ Ocelot（API网关）,服务治理有：Consul,ZooKeeper,Doozerd,ETCD
	Eureka
●服务框架Steeltoe：是.net版基于Spring Cloud的服务架构（Eureka服务中心+Hystrix断路器+Spring Cloud Config Server分布式配置中心+Cloud Foundry云平台）
●Kestrel：ASP.NET Core的web服务器，
●终结者模式：MediatR(消息解耦)，可以简化控制器业务逻辑
●MVVM开发模式
●依赖注入框架：Unity、Autofac
●NCache：分布式缓存
●gRPC for dotnet?微软官方集成的谷歌PPC
●CAP分布式事务框架
●nginx技术》反向代理、负载均衡
●Kerberos：安全认证
●Hangfire 分布式作业调度框架服务，类似的有：Quartz
●Windows支持OpenSSH了
●导出Excel另一种方式： nuget添加WeihanLi.Npoi
●Office处理插件：Spire.Office for .NET（旗下有Spire.Doc，Spire XLS，Spire.PDF，Spire.BarCode）
●导入导出Excel：WeihanLi.Npoi
●静态文件部署到 CDN

AngelaJS
webassemly技术革命
基于Node.js的puppeteer,edge爬虫工具
MongoDB数据库
Alwayson集群，数据库容灾方案


其他：
●文档制作工具GitBook
●Python、爬虫技术、八爪鱼


=============================知识================================
Redis：支持多种数据类型、支持持久化、支持数据同步、支持消息订阅，只能使用单线程，只能简单的事务支持
Memcache：吞吐量极高，只支持简单的key/value类型、不能持久化、无法数据同步
MongoDB：极高的写入速度、高可用性、快速且丰富的查询、可以数据分析，不支持事务、占用空间过大适合大数据存储，主要解决海量数据访问效率。
CQRS（Command Query Responsibility Segration）架构
SpringCloud（服务治理、负载均衡、服务容错、声明式服务调用、API网关服务、分布式配置中心）
三次握手：





=============================知识点================================
Lazy<T> 延迟加载技术
微软自带缓存Microsoft.Extensions.Caching.Memory 
Docker Machine




===============================使用===================================
RabbitMq：默认地址：http://localhost:15672
	安装插件：rabbitmq-plugins.bat enable rabbitmq_management
	查看状态：rabbitmqctl status 运行服务：rabbitmq-server.bat
	
===============================Dokcer===================================	
	

=============================极客时间学习纪要================================
服务生命周期：单例、作用域、瞬时
Autofac容器组件，可以实现面向切面编程，相当于拦截器
配置方式：内存硬编码、命令行模式（commandLineArgs）、环境变量（environmentVariables）Docker可以使用、
	支持前缀过滤、文件读取（支持检测变更） 
配置绑定强类型，自定义配置数据源（实现配置中心功能）
服务组件集成配置,监测配置动态变更，三种验证方式 
ILogger日志作用域，日志框架Serilog使用技巧
自定义中间件的使用
自定义异常处理
静态文件中间件的使用、文件提供程序的使用
Swagger三方包的使用，自定义路由约束
DDD领域驱动模型，工作单元UiitOfWork
集成事件是跨服务的领域事件，不能事务处理，可以借助CAP框架实现一致性

=============================Linux================================
一切皆文件 -表示文件，d表示目录，l表示软链接
严格区分大小写
命令：
	目录 ls -ald	创建目录mkdir  -p	删除目录rmdir	复制cp	剪切mv	删除文件rm	显示完整目录 pwd
	文件 创建touch	查看cat或者tac或者more或者head或者tail
	链接 ln
	权限 修改chmod -R递归	只有root可以使用chown chgrp改变所有者、所属组  缺省配置umask
	文件搜索（find、locate更快因为有一个mlocate.db索引库）工具Everything能很快搜索	 更新(updatedb)	查找命令(which、whereis)
		搜索文件内容（grep -v ^# /home/zhangyi）	setup/umtui
    帮助文档man，1表示命令的帮助5表示配置文件帮助	whatis命令 	apropos配置文件		命令 --help
	内置命令查看帮助可以使用：help cd 方式
	网络命令： write	wall	ping	ifconfig	mail	last	lastlog	traceroute	netstat
	关机shutdown	关机(halt	poweroff	init 0 )	重启reboot init 6	
	网络文件系统服务NFS
	编辑器Vim	:r !date	查看选项(more、cat）
	软件包：源码包、二进制包rpm		安装好的包在/var/lib/rpm/下查找， rpm -ivh 包全名，安装和升级需要包全名，
		 查询rpm -qail 包名		查询rpm -qf 系统文件名		查询rpm -qR 包名
	系统配置工具nmtui	配置文件/etc/sysconfig/network-scripts/   重启service network restart
		启动服务两种方式（/etc/rc.d/init.d/服务名 start	 或者service 服务名 start 还有 systemctl（service+chkconfig））
		查看环境变量(env)	查看分区信息(df -h)
	Yum安装：Yum文件配置在（/etc/yum.repos.d） 查询（yum list  或者 yum search 关键字），安装（yum -y install 包名）
		要先安装gcc（yum -y install gcc）	组安装（yum groouplist）
	源码包安装：安装位置需手工指定（建议安装在/usr/local/软件名）
	服务器管理工具Webmin（https://localhost.localdomain:10000/）
	用户管理： 邮箱(/var/spool/mail)	用户模板(/etc/skel)		添加用户默认值配置（/etc/default/useradd、/etc/login.defs）
		添加用户(useradd)	修改用户(usermod)	密码管理(passwd、chage)		删除用户(userdel -r)	切换登录(su - 登录名)
		加入组(gpasswd -a 用户名 组名)
	权限管理：
		acl权限（setfacl -m u:用户名:rx	文件夹）	查看文件的acl权限(getfacl 文件名)	
		特殊权限SetUID 设置（hmod 4755 文件名   或者   chmod u+s 文件名）只针对文件	
				SetGID 设置（hmod 2755 文件名   或者   chmod g+s 文件名）
				Sticky BIT 设置（hmod 1755 文件名   或者   chmod o+t 文件名） 只针对目录配置
		chattr文件系统属性权限，配置权限(chattr) 	查看该权限情况（lsattr）
		sudo权限(操作系统命令)	查询(sudo -l)	用法(sudo /sbin/shutdown -r now)
	文件系统：linux使用ext文件系统	
		查看分区挂载情况(df)注意df查看的不仅是文件本身还有系统未释放的资源		
		统计目录和文件大小(du -sh 目录名)
		修复命令(fsck)		显示磁盘状态(dumpe2fs)
		挂载命令mount，注意该命令针对的都是分区		卸载命令(umount 设备名或者挂载点)
		查看U盘设备名
		如何支持NTFS文件系统
	fdisk分区操作，分完区后不用重启计算机使用partprobe命令重读分区信息。
	分区自动挂载（/etc/fstab文件） 		fstab文件（mount -o remount,rw /）CentOS7已经能自动修复了
	快捷键设置(alias vi='vim'该方法只能临时生效，要想永久保存请使用修改文件/root/bashrc)
	查看环境变量(echo $PATH$)
	输出从定向(例如：ls > log.log)	错误输出从定向(lab 2> error.log)	正确错误同时保存(命令 &> 文件名)
		或者(命令 > 正确文件名 2> 错误文件名)
	让配置文件马上生效（source 配置文件）
	Shell登录信息配置(/etc/issue)	
	Linux服务：
		分为两种：PRM包默认服务（分为独立、基于xinetd服务两种方式）、源码包服务。
		查看RPM包安装的服务(chkconfig --list)	
		查询当前服务运行情况(service --status-all)
		源码包安装的服务 一般在/usr/local/下
		独立服务管理 (/etc/init.d/独立服务名 [start/stop/status/restart])  或者 (service 独立服务名 [start/stop/status/restart])
		查看服务的启动模式(chkconfig --list | grep 服务名)
		配置服务的启动模式(chkconfig --level 2345 服务名 on)  或者 使用工具(ntsysv) 或者  (修改/etc/rc.d/rc.local文件)
	进程管理：
		查看所有进程(ps aux 或者 ps -le) 查看某个进程(ps aux | grep 服务名)	
		查看健康状态 top
		查看进程树	pstree
		杀死进程：kill、killall、pkill	pkill可以按用户踢
	系统管理
		把进程放入后台( 命令+&)		查看后台工作（jobs -l）
		查看系统资源(vmstat 1 3)	内核检测(dmesg)		内存检测(free)	查看cpu信息(/proc/cpuinfo	或者 w)
		查看启动时间和平均负载(uptime 或者 w)	查看系统信息(uname)		查看系统位数(file /bin/ls)
		定时任务：crond命令（service crond restart	chkconfig crond on）	crontab[选项]
	日志管理
		rsyslogd	常见命令(lastb、lastlog、last、w、who、users)
	启动管理
		运行级别(0关机、1单用户、2不完整命令行、3完整命令行、4暂无、5图形界面、6重启)
		配置默认运行级别：cat /etc/inittab	查询运行级别runlevel	改变运行级别 (init 数字)
	备份：
		建议备份文件(/root,/home,/var/spool/mail,/etc,其他)
		dump备份命令（dump -0uj -f /home/boot.bz2 /boot）
		